{"version":3,"sources":["assets\\script\\main.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEAoDC;QAjDG,WAAK,GAAa,IAAI,CAAC;QAGvB,UAAI,GAAW,OAAO,CAAC;;IA8C3B,CAAC;IA5CG,4BAAS,GAAT;QACI,kCAAkC;QAClC,yEAAyE;QACzE,qBAAqB;QACrB,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAClD,IAAI,SAAS,GAAY,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QAEzD,aAAa;QACb,IAAI,KAAK,GAAG,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC7C,KAAK,CAAC,MAAM,GAAG,eAAe,CAAC;QAE/B,aAAa;QACb,IAAI,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAClD,MAAM,CAAC,cAAc,EAAE,CAAC;IAC5B,CAAC;IAED,wBAAwB;IAExB,aAAa;IACb,yBAAM,GAAN;QACI,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAC1C,CAAC;IAED,sCAAsC;IACtC,wBAAK,GAAL;QACI,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACzC,CAAC;IAED,kCAAkC;IAClC,yBAAM,GAAN,UAAO,EAAE;QACL,8CAA8C;IAClD,CAAC;IAED,2BAAQ,GAAR;QACI,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC5C,CAAC;IAED,4BAAS,GAAT;QACI,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC7C,CAAC;IAED,4BAAS,GAAT;QACI,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC7C,CAAC;IAhDD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;2CACI;IAGvB;QADC,QAAQ;0CACc;IANN,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAoD5B;IAAD,eAAC;CApDD,AAoDC,CApDqC,EAAE,CAAC,SAAS,GAoDjD;kBApDoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    text: string = 'hello';\r\n\r\n    onClicked() {\r\n        // cc.find 只传入第一个参数时，将从场景根节点开始逐级查找\r\n        // let labelNote:cc.Node = cc.find(\"Canvas/Main Scence/Page/Test Label\");\r\n        // 传入两个参数时,从传入的节点开始查找\r\n        let pageNode = cc.find(\"Canvas/Main Scence/Page\");\r\n        let labelNote: cc.Node = cc.find(\"Test Label\", pageNode);\r\n\r\n        // 获取node上的控件\r\n        let label = labelNote.getComponent(cc.Label);\r\n        label.string = 'Changed Value';\r\n\r\n        // 获取node上的脚本\r\n        let script = label.getComponent('PositionScript');\r\n        script.changePosition();\r\n    }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // 组件脚本的初始化阶段\r\n    onLoad() {\r\n        console.log('---- onLoad is go ----');\r\n    }\r\n\r\n    // 回调函数会在组件第一次激活前，也就是第一次执行 update 之前触发\r\n    start() {\r\n        console.log('---- start is go ----');\r\n    }\r\n\r\n    // 游戏开发的一个关键点是在每一帧渲染前更新物体的行为，状态和方位\r\n    update(dt) {\r\n        // console.log('---- update is go ----' + dt);\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('---- onEnable is go ----');\r\n    }\r\n\r\n    onDisable() {\r\n        console.log('---- onDisable is go ----');\r\n    }\r\n\r\n    onDestroy() {\r\n        console.log('---- onDestroy is go ----');\r\n    }\r\n}\r\n"]}